name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/techguard?schema=public
      NEXTAUTH_SECRET: test-secret
      SKIP_ENV_VALIDATION: "true"
    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: techguard
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm db:generate

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Run unit and integration tests with coverage
        run: pnpm test:coverage

      - name: Build production bundle
        run: pnpm build

      - name: Install Playwright browsers
        run: pnpm playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm e2e

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: e2e-report

      - name: Upload Next.js build output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next
