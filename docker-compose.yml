services:
  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: techguard
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
      mailpit:
        condition: service_started
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/techguard?schema=public
      NEXTAUTH_URL: http://localhost:3001
      NEXTAUTH_SECRET: change-me
      STRIPE_SECRET_KEY: sk_test_placeholder
      STRIPE_WEBHOOK_SECRET: whsec_placeholder
      RESEND_API_KEY: ''
      EMAIL_FROM: noreply@example.com
      SMTP_HOST: mailpit
      SMTP_PORT: 1025
      SMTP_SECURE: "false"
      SMTP_USER: ''
      SMTP_PASS: ''
      NEXT_PUBLIC_APP_URL: http://localhost:3001
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3001:3000"
    command: ["pnpm", "start"]
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "fetch('http://127.0.0.1:3000/api/readyz').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))",
        ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s
volumes:
  pgdata:
